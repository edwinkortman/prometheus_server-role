---

- name: PROMETHEUS | Copy environment file
  template:
    src: prometheus.environment.j2
    dest: /etc/default/prometheus
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0640
  notify: restart prometheus

- name: PROMETHEUS | Sync rules
  synchronize:
    src: "{{ prometheus_rules_templates_path }}/"
    dest: "{{ prometheus_conf_path }}/rules/"
    perms: no
    owner: no
    group: no
    delete: yes
  become: true
  become_user: "{{ prometheus_user }}"
  notify:
    - reload prometheus

- name: PROMETHEUS | Update permissions for rules
  file:
    path: "{{ prometheus_conf_path }}/rules"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0640
    recurse: yes
  notify:
    - reload prometheus

- name: PROMETHEUS | Set rules loaded var
  find:
    paths: "{{ prometheus_rules_templates_path }}"
    file_type: file
  delegate_to: localhost
  become: no
  register: rules_loaded

- name: PROMETHEUS | Set rules templates var
  set_fact:
    prometheus_rules_templates:  "{{ rules_loaded.files | map(attribute='path') | map('basename') | list }}"

- name: PROMETHEUS | Copy server config (global)
  template:
    src: "{{ item }}.j2"
    dest: "{{prometheus_conf_path}}/parts/{{ item }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0640
  with_items:
    - "1_global_prometheus"

- name: PROMETHEUS | Load scrape vars
  include_vars:
    file: "{{ item }}"
    name: "{{ item | basename | splitext | first }}"
  with_fileglob:
    - "{{ prometheus_config_vars_templates_path }}/*"

- name: PROMETHEUS | Copy scrapes
  template:
    src: "{{ item }}"
    dest: "{{prometheus_conf_path}}/parts/{{ item | basename | splitext | first }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0640
  with_fileglob:
    - "{{ prometheus_config_scrapes_templates_path }}/*"

- name: PROMETHEUS | Set scrapes loaded var
  find:
    paths: "{{ prometheus_config_scrapes_templates_path }}"
    file_type: file
  delegate_to: localhost
  become: no
  register: scrapes_loaded

- name: PROMETHEUS | Set scrapes templates var
  set_fact:
    prometheus_scrapes_templates:  "{{ scrapes_loaded.files | map(attribute='path') | map('basename') | map('splitext') | map('first') | list | union(['1_global_prometheus']) }}"

- name: PROMETHEUS | List all scrapes in path
  find:
    paths: "{{ prometheus_conf_path }}/parts"
    file_type: file
  register: all_scrapes

- name: PROMETHEUS | Remove old scrapes
  file:
    path: "{{ prometheus_conf_path }}/parts/{{ item }}"
    state: absent
  with_items:
    - "{{ all_scrapes.files | map(attribute='path') |  map('basename') | map('splitext') | map('first') | list | difference(prometheus_scrapes_templates) }}"

- name: PROMETHEUS | Join config parts
  assemble:
    remote_src: true
    src: "{{ prometheus_conf_path }}/parts"
    dest: "{{ prometheus_conf_path }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0640
    delimiter: '\n'
  notify:
    - restart prometheus

- name: PROMETHEUS | Copy logrotate config
  template:
    src: logrotate.j2
    dest: /etc/logrotate.d/prometheus
    mode: 0644
    owner: root
    group: root
